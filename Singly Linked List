#include <stdio.h>
#include <stdlib.h>

typedef struct Node
{
    int data;
    struct Node *next;
} LL;

LL *head = NULL;

struct Node *createNode(int element)
{
    LL *new = (struct Node *)malloc(sizeof(LL));
    if (new == NULL)
    {
        printf("Memory cannot be allocated");
        exit(0);
    }
    else
    {
        new->data = element;
        new->next = NULL;
    }
    return new;
}

void insertBack()
{
    int ele;
    printf("Enter data to be inserted in new node");
    scanf("%d", &ele);
    LL *nn = createNode(ele);
    if (head == NULL)
    {
        head = nn;
    }
    else
    {
        LL *temp = head;
        while (temp->next != NULL)
        {
            temp = temp->next;
        }
        temp->next = nn;
    }
}

void insertFront()
{
    int ele;
    printf("Enter data to be inserted\n");
    scanf("%d", &ele);
    LL *nn = createNode(ele);
    if (head != NULL)
    {
        nn->next = head;
    }
    head = nn;
}

int deleteFront()
{
    int ele;
    if (head == NULL)
    {
        printf("Linked list is empty\n");
        return 0;
    }
    else
    {
        if (head->next == NULL)
        {
            ele = head->data;
            free(head);
            head = NULL;
        }
        else
        {
            LL *temp = head;
            head = head->next;
            ele = temp->data;
            free(temp);
            temp = NULL;
        }
        return ele;
    }
}

int deleteBack()
{
    int ele;
    if (head == NULL)
    {
        printf("Linked list is empty\n");
        return 0;
    }
    else
    {
        LL *prev = NULL;
        LL *temp = head;
        while (temp->next != NULL)
        {
            prev = temp;
            temp = temp->next;
        }
        ele = temp->data;
        if (prev != NULL)
        {
            prev->next = NULL;
        }
        else
        {
            // If there was only one element in the list
            head = NULL;
        }
        free(temp);
        temp = NULL;
        return ele;
    }
}

void display()
{
    LL *temp = head;
    printf("LL elements are:  ");
    while (temp != NULL)
    {
        printf("%d\t", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");
}

void main()
{
    int delele;
    int delbackele;
    int choice;
    while (1)
    {
        printf("Press\n1.Insert at Front\n2.Insert at Back\n3.Delete at Front\n4.Delete at Back\n5.Display\n6.Exit\n");
        scanf("%d", &choice);
        switch (choice)
        {
        case 1:
            insertFront();
            break;

        case 2:
            insertBack();
            break;

        case 3:
            delele = deleteFront();
            printf("Deleted element is %d\n", delele);
            break;

        case 4:
            delbackele = deleteBack();
            printf("Deleted element is %d\n", delbackele);
            break;

        case 5:
            display();
            break;

        case 6:
            exit(0);

        default:
            printf("Enter valid choice\n");
        }
    }

}

